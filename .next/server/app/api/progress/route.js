"use strict";(()=>{var e={};e.id=153,e.ids=[153],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},11571:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>j,patchFetch:()=>v,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>w,staticGenerationAsyncStorage:()=>x});var t={};s.r(t),s.d(t,{DELETE:()=>c,GET:()=>p,POST:()=>l});var o=s(49303),n=s(88716),u=s(60670),a=s(87070);let i={user:{id:"dev-user-001",email:"dev@molddetoxmastery.com",name:"Development User",image:null},expires:new Date(Date.now()+2592e6).toISOString()};async function d(){return await new Promise(e=>setTimeout(e,0)),i}async function p(e){try{let e=await d();if(!e?.user?.email)return a.NextResponse.json({error:"You must be logged in to view progress"},{status:401});let r={"00-quick-start":{moduleId:"00-quick-start",completedLessons:["1","2","3","4","5"],lastAccessed:new Date,isCompleted:!0},"01-understanding-mold":{moduleId:"01-understanding-mold",completedLessons:["1","2","3","4","5"],lastAccessed:new Date,isCompleted:!1}};return a.NextResponse.json({progress:r,totalModulesCompleted:1,lastActivity:new Date})}catch(e){return console.error("Get progress error:",e),a.NextResponse.json({error:"Failed to retrieve progress"},{status:500})}}async function l(e){try{let r=await d();if(!r?.user?.email)return a.NextResponse.json({error:"You must be logged in to update progress"},{status:401});let{moduleId:s,lessonId:t,completed:o,moduleCompleted:n}=await e.json();if(!s)return a.NextResponse.json({error:"Module ID is required"},{status:400});let u={id:"mock-progress-id",userId:"dev-user-001",moduleId:s,lessonId:t||"module-complete",completed:o,moduleCompleted:n||!1,createdAt:new Date,updatedAt:new Date};return a.NextResponse.json({success:!0,progress:u,message:"Progress updated successfully (mock)"})}catch(e){return console.error("Update progress error:",e),a.NextResponse.json({error:"Failed to update progress"},{status:500})}}async function c(e){try{let r=await d();if(!r?.user?.email)return a.NextResponse.json({error:"You must be logged in to reset progress"},{status:401});let{searchParams:s}=new URL(e.url);if(!s.get("moduleId"))return a.NextResponse.json({error:"Module ID is required"},{status:400});return a.NextResponse.json({success:!0,message:"Module progress reset successfully (mock)"})}catch(e){return console.error("Reset progress error:",e),a.NextResponse.json({error:"Failed to reset progress"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/progress/route",pathname:"/api/progress",filename:"route",bundlePath:"app/api/progress/route"},resolvedPagePath:"/Users/coleharing/Cursor_Projects/Mold_detox_2/app/api/progress/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:g,staticGenerationAsyncStorage:x,serverHooks:w}=m,j="/api/progress/route";function v(){return(0,u.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:x})}}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,972],()=>s(11571));module.exports=t})();