"use strict";(()=>{var e={};e.id=218,e.ids=[218],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},83952:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y});var t={};s.r(t),s.d(t,{GET:()=>c,POST:()=>d});var i=s(49303),o=s(88716),n=s(60670),a=s(87070),p=s(75571),u=s(5018),l=s(62343);async function d(e){try{let r=await (0,p.getServerSession)(u.L);if(!r?.user?.email)return a.NextResponse.json({error:"You must be logged in to save onboarding data"},{status:401});let s=await e.json(),t=await l._.user.findUnique({where:{email:r.user.email}});if(!t)return a.NextResponse.json({error:"User not found"},{status:404});let i={livingSituation:s.profile?.livingSituation||null,exposureHistory:JSON.stringify({location:s.exposure?.location||[],duration:s.exposure?.duration||"",visible:s.exposure?.visible||[],notes:s.exposure?.notes||""}),symptoms:JSON.stringify({severity:s.symptoms?.severity||"5",primary:s.symptoms?.primary||[],duration:s.symptoms?.duration||"",triggers:s.symptoms?.triggers||[]}),priorTests:JSON.stringify(s.exposure?.tests||[]),budget:s.constraints?.budget||null,equipment:JSON.stringify(s.constraints?.equipment||[]),dietConstraints:JSON.stringify(s.constraints?.diet||[]),timezone:s.profile?.timezone||null,preferredPace:s.constraints?.pace||"moderate"},o=await l._.onboardingProfile.upsert({where:{userId:t.id},create:{userId:t.id,...i},update:i}),n=function(e){let r={startModule:"quick-start",priorityTools:[],focusAreas:[],warnings:[]};return parseInt(e.symptoms?.severity||"5")>=8&&(r.warnings.push("severe-symptoms"),r.focusAreas.push("gentle-approach")),e.exposure?.duration==="current"&&(r.priorityTools.push("exposure-checklist"),r.focusAreas.push("source-identification"),r.warnings.push("active-exposure")),e.constraints?.budget==="minimal"&&r.focusAreas.push("diy-protocols"),e.symptoms?.primary?.includes("brain-fog")&&r.priorityTools.push("drainage-readiness"),e.constraints?.pace==="gentle"?r.focusAreas.push("slow-introduction"):e.constraints?.pace==="aggressive"&&r.focusAreas.push("accelerated-protocol"),0===r.priorityTools.length&&r.priorityTools.push("exposure-checklist"),r}(s);return await l._.badge.upsert({where:{userId_type:{userId:t.id,type:"onboarding-complete"}},create:{userId:t.id,type:"onboarding-complete"},update:{}}),await l._.streak.upsert({where:{userId:t.id},create:{userId:t.id,currentDays:1,longestDays:1},update:{lastCheckIn:new Date}}),await l._.user.update({where:{id:t.id},data:{lastActive:new Date,name:s.profile?.name||t.name}}),a.NextResponse.json({success:!0,profileId:o.id,recommendations:n,message:"Onboarding completed successfully"})}catch(e){return console.error("Onboarding error:",e),a.NextResponse.json({error:"Failed to save onboarding data"},{status:500})}}async function c(e){try{let e=await (0,p.getServerSession)(u.L);if(!e?.user?.email)return a.NextResponse.json({error:"You must be logged in to view onboarding data"},{status:401});let r=await l._.user.findUnique({where:{email:e.user.email},include:{profile:!0}});if(!r||!r.profile)return a.NextResponse.json({completed:!1},{status:200});let s={...r.profile,exposureHistory:r.profile.exposureHistory?JSON.parse(r.profile.exposureHistory):null,symptoms:r.profile.symptoms?JSON.parse(r.profile.symptoms):null,priorTests:r.profile.priorTests?JSON.parse(r.profile.priorTests):null,equipment:r.profile.equipment?JSON.parse(r.profile.equipment):null,dietConstraints:r.profile.dietConstraints?JSON.parse(r.profile.dietConstraints):null};return a.NextResponse.json({completed:!0,profile:s})}catch(e){return console.error("Get onboarding error:",e),a.NextResponse.json({error:"Failed to retrieve onboarding data"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/onboarding/route",pathname:"/api/onboarding",filename:"route",bundlePath:"app/api/onboarding/route"},resolvedPagePath:"/Users/coleharing/Cursor_Projects/Mold_detox_2/app/api/onboarding/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:g,staticGenerationAsyncStorage:y,serverHooks:f}=m,x="/api/onboarding/route";function h(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}},5018:(e,r,s)=>{s.d(r,{L:()=>a});var t=s(53797),i=s(84050),o=s(62343),n=s(42023);let a={adapter:(0,i.N)(o._),session:{strategy:"jwt"},pages:{signIn:"/signin",signOut:"/signin",error:"/signin",verifyRequest:"/signin"},providers:[(0,t.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)throw Error("Invalid credentials");let r=await o._.user.findUnique({where:{email:e.email}});if(!r||!r.password||!await n.ZP.compare(e.password,r.password))throw Error("Invalid credentials");return{id:r.id,email:r.email,name:r.name}}})],callbacks:{jwt:async({token:e,user:r})=>r?{...e,id:r.id}:e,session:async({session:e,token:r})=>({...e,user:{...e.user,id:r.id}})}}},62343:(e,r,s)=>{s.d(r,{_:()=>i});let t=require("@prisma/client"),i=globalThis.prisma??new t.PrismaClient}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[276,972,23,687],()=>s(83952));module.exports=t})();